# overlays/dev/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: ray-training-dev

resources:
  - ../../base
  - resource-quotas.yaml

patchesStrategicMerge:
  - ray-cluster-patch.yaml

commonLabels:
  environment: dev

images:
  - name: rayproject/ray
    newTag: 2.9.0-py310

---
# overlays/dev/resource-quotas.yaml
apiVersion: v1
kind: ResourceQuota
metadata:
  name: data-pipeline-quota
  namespace: data-pipeline-dev
spec:
  hard:
    requests.cpu: "8"
    requests.memory: 32Gi
    limits.cpu: "16"
    limits.memory: 64Gi
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: ray-training-quota
  namespace: ray-training-dev
spec:
  hard:
    requests.cpu: "16"
    requests.memory: 64Gi
    limits.cpu: "32"
    limits.memory: 128Gi
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: notebooks-quota
  namespace: notebooks-dev
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 16Gi
    limits.cpu: "8"
    limits.memory: 32Gi

---
# overlays/dev/ray-cluster-patch.yaml
apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: arima-training-cluster
  namespace: ray-training-dev
spec:
  # Development environment - smaller resources
  headGroupSpec:
    template:
      spec:
        containers:
        - name: ray-head
          resources:
            limits:
              cpu: "2"
              memory: "4Gi"
            requests:
              cpu: "500m"
              memory: "2Gi"
  
  workerGroupSpecs:
  - replicas: 2  # Start with 2 workers in dev
    minReplicas: 0
    maxReplicas: 8  # More workers for ARIMA bootstrapping
    groupName: cpu-workers
    rayStartParams:
      num-cpus: '4'  # 4 CPUs per worker for parallel ARIMA
    template:
      spec:
        containers:
        - name: ray-worker
          resources:
            limits:
              cpu: "4"
              memory: "16Gi"  # Higher memory for financial datasets
            requests:
              cpu: "1"
              memory: "8Gi"
